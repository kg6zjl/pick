name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [aarch64, x86_64]
        include:
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            arch: aarch64
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macOS'
        run: |
          brew install docker
          colima start
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable # Specify the toolchain here, e.g., stable, nightly, or a specific version
          target: ${{ matrix.target }}
          override: true
      - name: Build
        run: |
          cargo build --verbose --target ${{ matrix.target }}
          # If you need to package the build artifacts into a Docker image
          # docker buildx build --platform linux/${{ matrix.arch }} -t myimage:${{ matrix.target }} .
      - name: Run tests
        run: cargo test --verbose --target ${{ matrix.target }}
