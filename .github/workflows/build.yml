name: Build

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            arch: aarch64
          - target: aarch64-apple-darwin
            os: macos-latest
            arch: aarch64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            arch: x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            arch: x86_64
            rustup_target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')

      - name: Rustup Setup
        run: rustup target add ${{ matrix.rustup_target }}
        if: matrix.rustup_target

      - name: Build with cargo
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: pick-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pick

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
      
      - name: Display structure of all downloaded files
        run: ls -R; ls -lah

      - name: Get Version
        id: get_version
        run: |
          echo ::set-output name=VERSION::$(awk -F= '/\[package\]/{flag=1;next}/\[/{flag=0}flag && /version/{print $2;exit}' Cargo.toml | tr -d ' "')

      - name: Create Release with tag from Cargo.toml
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          token: ${{ secrets.GHACTION_TOKEN }}

      - name: Rename files to arch and os
        run: |
          rm -rf releases/; mkdir releases/; for f in $(ls -1 -d pick-*); do mv $f/pick releases/$f; done; ls -lah releases/

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          files: releases/pick-*
          token: ${{ secrets.GHACTION_TOKEN }}
          fail_on_unmatched_files: true
